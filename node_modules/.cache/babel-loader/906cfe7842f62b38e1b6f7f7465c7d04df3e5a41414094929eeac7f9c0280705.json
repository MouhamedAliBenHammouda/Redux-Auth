{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterAction = counterSlice.actions;\nexport const authAction = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","auth","counterAction","actions","authAction"],"sources":["C:/Users/LENOVO/Desktop/01-starting-project (3)/01-starting-project/src/store/index.js"],"sourcesContent":["import {createSlice,configureStore}from'@reduxjs/toolkit';\r\n\r\nconst initialCounterState={counter:0,showCounter:true};\r\n\r\nconst counterSlice= createSlice({\r\n    name:'counter',\r\n    initialState:initialCounterState,\r\n    reducers:{\r\n        increment(state){\r\n            state.counter++;\r\n        },\r\n        decrement(state){\r\n            state.counter--;\r\n        },\r\n        increase(state,action){\r\n            state.counter=state.counter + action.payload;\r\n        },\r\n        toggleCounter(state){\r\n            state.showCounter=!state.showCounter;\r\n        }\r\n    }\r\n});\r\n\r\nconst initialAuthState ={\r\n    isAuthenticated:false,\r\n}\r\n\r\nconst authSlice=createSlice({\r\n    name:'authentication',\r\n    initialState:initialAuthState,\r\n    reducers:{\r\n        login(state){\r\n            state.isAuthenticated=true;\r\n        },\r\n        logout(state){\r\n            state.isAuthenticated=false;\r\n        }\r\n    }\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        counter :counterSlice.reducer,\r\n        auth:authSlice.reducer\r\n    },\r\n});\r\n\r\nexport const counterAction=counterSlice.actions;\r\nexport const authAction = authSlice.actions;\r\nexport default store;"],"mappings":"AAAA,SAAQA,WAAW,EAACC,cAAc,QAAK,kBAAkB;AAEzD,MAAMC,mBAAmB,GAAC;EAACC,OAAO,EAAC,CAAC;EAACC,WAAW,EAAC;AAAI,CAAC;AAEtD,MAAMC,YAAY,GAAEL,WAAW,CAAC;EAC5BM,IAAI,EAAC,SAAS;EACdC,YAAY,EAACL,mBAAmB;EAChCM,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDS,QAAQA,CAACF,KAAK,EAACG,MAAM,EAAC;MAClBH,KAAK,CAACP,OAAO,GAACO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAC;MAChBA,KAAK,CAACN,WAAW,GAAC,CAACM,KAAK,CAACN,WAAW;IACxC;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMY,gBAAgB,GAAE;EACpBC,eAAe,EAAC;AACpB,CAAC;AAED,MAAMC,SAAS,GAAClB,WAAW,CAAC;EACxBM,IAAI,EAAC,gBAAgB;EACrBC,YAAY,EAACS,gBAAgB;EAC7BR,QAAQ,EAAC;IACLW,KAAKA,CAACT,KAAK,EAAC;MACRA,KAAK,CAACO,eAAe,GAAC,IAAI;IAC9B,CAAC;IACDG,MAAMA,CAACV,KAAK,EAAC;MACTA,KAAK,CAACO,eAAe,GAAC,KAAK;IAC/B;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMI,KAAK,GAAGpB,cAAc,CAAC;EACzBqB,OAAO,EAAE;IACLnB,OAAO,EAAEE,YAAY,CAACiB,OAAO;IAC7BC,IAAI,EAACL,SAAS,CAACI;EACnB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAME,aAAa,GAACnB,YAAY,CAACoB,OAAO;AAC/C,OAAO,MAAMC,UAAU,GAAGR,SAAS,CAACO,OAAO;AAC3C,eAAeJ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}